/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.edusys.ui;

import com.edusys.dao.MonHocDAO;
import com.edusys.entity.MonHoc;
import com.edusys.utils.MsgBox;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tinhn
 */
public class QuanLyMonHoc extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyMonHoc
     */
    public QuanLyMonHoc() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        lblQuanLyMonHoc = new javax.swing.JLabel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        pnlThongTinMonHoc = new javax.swing.JPanel();
        lblMaMonHoc2 = new javax.swing.JLabel();
        lblTenMoHoc = new javax.swing.JLabel();
        txtMaMonHoc = new javax.swing.JTextField();
        txtTenMonHoc = new javax.swing.JTextField();
        cboKyHoc = new javax.swing.JComboBox<>();
        lblKyHoc = new javax.swing.JLabel();
        lblMaMonHoc = new javax.swing.JLabel();
        btnTim = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        bntUpdate = new javax.swing.JButton();
        bntDelete = new javax.swing.JButton();
        lblDanhSach = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ MÔN HỌC");

        lblQuanLyMonHoc.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblQuanLyMonHoc.setForeground(new java.awt.Color(255, 102, 102));
        lblQuanLyMonHoc.setText("Quản Lý Môn Học");

        lblTimKiem.setText("Tìm kiếm");

        pnlThongTinMonHoc.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblMaMonHoc2.setText("Mã môn học");

        lblTenMoHoc.setText("Tên môn học");

        cboKyHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kỳ 1", "Kỳ 2", "Kỳ 3", "Kỳ 4", "Kỳ 5", "Kỳ 6", " " }));

        lblKyHoc.setText("Kỳ học");

        javax.swing.GroupLayout pnlThongTinMonHocLayout = new javax.swing.GroupLayout(pnlThongTinMonHoc);
        pnlThongTinMonHoc.setLayout(pnlThongTinMonHocLayout);
        pnlThongTinMonHocLayout.setHorizontalGroup(
            pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinMonHocLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTenMoHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaMonHoc2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKyHoc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtMaMonHoc)
                        .addComponent(txtTenMonHoc, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                    .addComponent(cboKyHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        pnlThongTinMonHocLayout.setVerticalGroup(
            pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinMonHocLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaMonHoc2)
                    .addComponent(txtMaMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenMoHoc)
                    .addComponent(txtTenMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlThongTinMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboKyHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKyHoc))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        lblMaMonHoc.setText("Mã môn học");

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        bntUpdate.setText("Update");
        bntUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntUpdateActionPerformed(evt);
            }
        });

        bntDelete.setText("Delete");
        bntDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDeleteActionPerformed(evt);
            }
        });

        lblDanhSach.setText("Danh sách các môn học");

        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã môn học", "Tên môn học", "Kỳ học"
            }
        ));
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSach);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMaMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblQuanLyMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlThongTinMonHoc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bntUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bntDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuanLyMonHoc)
                .addGap(16, 16, 16)
                .addComponent(lblTimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaMonHoc)
                    .addComponent(btnTim))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(pnlThongTinMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(bntUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(bntDelete)))
                .addGap(18, 18, 18)
                .addComponent(lblDanhSach)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        this.timKiem();
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        this.clearForm();
        MsgBox.alert(this, "New thành công!");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        this.insert();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void bntUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntUpdateActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_bntUpdateActionPerformed

    private void bntDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDeleteActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_bntDeleteActionPerformed

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 1){
            this.row = tblDanhSach.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblDanhSachMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyMonHoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntDelete;
    private javax.swing.JButton bntUpdate;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTim;
    private javax.swing.JComboBox<String> cboKyHoc;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDanhSach;
    private javax.swing.JLabel lblKyHoc;
    private javax.swing.JLabel lblMaMonHoc;
    private javax.swing.JLabel lblMaMonHoc2;
    private javax.swing.JLabel lblQuanLyMonHoc;
    private javax.swing.JLabel lblTenMoHoc;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel pnlThongTinMonHoc;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField txtMaMonHoc;
    private javax.swing.JTextField txtTenMonHoc;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
    
    /*          QUAN TRỌNG    
    *CHÚ Ý NHỚ THÊM HÀM INIT VÀ CÁC HÀM VÀO ĐÚNG CÁC HÀM NHA*####
    
     Tổng kết: Vì sao mô hình thác nước có ưu điểm?
    ✔ Quy trình rõ ràng, dễ quản lý và theo dõi tiến độ.
    ✔ Tài liệu đầy đủ, thuận lợi cho bảo trì, nâng cấp.
    ✔ Dễ kiểm soát lỗi, giúp đảm bảo chất lượng phần mềm.
    ✔ Phù hợp với dự án có yêu cầu cố định, ít thay đổi.
    ✔ Dễ áp dụng cho nhóm ít kinh nghiệm, không cần linh hoạt như Agile.
    
    Chọn mô hình thác nước vì nó rõ ràng, dễ quản lý, có tài liệu đầy đủ, 
    phù hợp với yêu cầu ổn định và kiểm thử chặt chẽ. Nó giúp đảm bảo tiến độ, 
    giảm rủi ro và phù hợp với nhóm phát triển ít kinh nghiệm.    
    */
    
    MonHocDAO dao = new MonHocDAO();
    int row = -1;
    void init(){
        this.setLocationRelativeTo(null); 
        this.fillTable();
    }
    
    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
        model.setRowCount(0);
        try {
            List<MonHoc> list = dao.selectAll();
            for (MonHoc mh : list) {
                Object[] row = {
                    mh.getId(),
                    mh.getTenMonHoc(),
                    mh.getKyHoc()
                };
                model.addRow(row);
            }
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    
    void insert(){
        MonHoc mh = this.getForm();
        if (dao.selectById(mh.getId()) != null) { 
            MsgBox.alert(this, "Mã môn học đã tồn tại!");
        }   
        else if(mh.getId().isEmpty() || mh.getTenMonHoc().isEmpty()){
            MsgBox.alert(this, "Vui lòng nhập đầy đủ thông tin!");
        }
        else{
            try {
                dao.insert(mh); 
                this.fillTable(); 
                this.clearForm(); 
                MsgBox.alert(this, "Thêm mới thành công!");
            } 
            catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!");
            }            
        }
    }
    
    void update(){
        MonHoc mh = this.getForm();
        try {
            dao.update(mh); 
            this.fillTable(); 
            this.clearForm(); 
            MsgBox.alert(this, "Cập nhật thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }
    
    void delete(){
        String ID = txtMaMonHoc.getText();
        if(MsgBox.confirm(this, "Bạn thực sự muốn xóa môn học này?")){
            try {
                dao.delete(ID);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công!");
            } 
            catch (Exception e) {
                 MsgBox.alert(this, "Xóa thất bại!");
            }
        }
    }
    
    void clearForm(){
        MonHoc mh = new MonHoc();
        this.setForm(mh);
        cboKyHoc.setSelectedIndex(0);
        this.row = -1;
    } 
    
    void edit() {
        String ID = (String) tblDanhSach.getValueAt(this.row, 0);
        MonHoc mh = dao.selectById(ID);
        this.setForm(mh);
    }
    
    void setForm(MonHoc mh){
        txtMaMonHoc.setText(mh.getId());
        txtTenMonHoc.setText(mh.getTenMonHoc());
        cboKyHoc.setSelectedItem(mh.getKyHoc());
    }
    
    MonHoc getForm(){
        MonHoc mh = new MonHoc();
        mh.setId(txtMaMonHoc.getText());
        mh.setTenMonHoc(txtTenMonHoc.getText());
        mh.setKyHoc(cboKyHoc.getSelectedItem().toString());
        return mh;
    }
    
    private void timKiem() {
        String keyword = txtTimKiem.getText(); 
        if(keyword.isEmpty()){
            MsgBox.alert(this, "Nhập mã để tìm kiếm!");
            return;
        }                
        List<MonHoc> list = dao.selectByKeyword(keyword);
        DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
        model.setRowCount(0); 
        if(list.isEmpty()){
            MsgBox.alert(this, "Không tìm thấy môn học!");
        }
        else{
            for (MonHoc mh : list) {
                Object[] row = {
                    mh.getId(),
                    mh.getTenMonHoc(),
                    mh.getKyHoc()
                };
                model.addRow(row);               
            }        
            MsgBox.alert(this, "Tìm kiếm thành công!");
        }
        txtTimKiem.setText("");   
    }
    
    /*private void timKiem() {
        String keyword = txtTimKiem.getText().trim();
        List<MonHoc> list = dao.selectByKeyword(keyword); 
        if (list != null && !list.isEmpty()) { 
            MonHoc mh = list.get(0); 
            txtMaMonHoc.setText(String.valueOf(mh.getId()));
            txtTenMonHoc.setText(mh.getTenMonHoc());

        } else {
            MsgBox.alert(this, "Ko tìm thấy");
            txtMaMonHoc.setText("");
            txtTenMonHoc.setText("");
        }

        txtTimKiem.setText(""); 
    }*/
}


